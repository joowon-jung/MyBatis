<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
	<mapper namespace="UserMapper08"> 

	<!-- SELECT 매핑구문에서 사용한 ResultSet 과 바인딩될 비지니스 객체 명시적 정의 -->
  	<resultMap id="userSelectMap" type="user">
  		<result property = "userId" column="user_id" jdbcType="VARCHAR"/>
  		<result property = "userName" column="user_name" jdbcType="VARCHAR"/>
  		<result property = "password" column="password" jdbcType="VARCHAR"/>
  		<result property = "age" column="age" jdbcType="INTEGER"/>
  		<result property = "grade" column="grade" jdbcType="NUMERIC"/>
  		<result property = "regDate" column="reg_date" jdbcType="DATE"/>
  	</resultMap>
  	
	<!-- SQL을 컴포넌트 할 수 있는 sql, include element -->
	<sql id = "select-users">
		SELECT
		user_id, user_name, password, age, grade, reg_date
		FROM users
	</sql>
	
	<sql id = "orderby-userId-desc">
		ORDER BY user_id DESC 	
	</sql>
  	
  	<!-- dynamic SQL :: <where> element 는 <trim> elements 로 변경 가능 -->
  	<select 	id="getUserList01" 	parameterType="user" resultMap="userSelectMap">
		<include refid = "select-users"/>
		<!-- prefix : 접두어 / prefixOverrides : AND or OR 로 시작하면 무시 -->
		<trim prefix = "WHERE" prefixOverrides="AND | OR">
			<if test = "userName != null">
				user_name = #{userName}
			</if>
			<if test = "age != null">
				AND age = #{age}
			</if>
		</trim>
		<include refid = "orderby-userId-desc"/>
  	</select>
  	
  	<!-- dynamic SQL :: <where> element 는 <trim> elements 로 변경 가능 -->
  	 <select 	id="getUserList02" 	parameterType="user" resultMap="userSelectMap">
		<include refid = "select-users"/>  	
		<trim prefix = "WHERE">
			<!-- switch / case / default 와 비교 이해 -->
			<choose>
				<when test = "userId != null">
					user_id = #{userId}
				</when>
				<when test = "userName != null and password != null">
					user_name = #{userName} AND password = #{password}
				</when>
				<otherwise>
					grade = #{grade}
				</otherwise>
			</choose>
		</trim>
		<include refid = "orderby-userId-desc"/>
  	</select>
  	
	<!-- dynamic SQL :: <set> element 사용 -->
	<update id = "updateUser01" parameterType="user">
		UPDATE users
		<set>
			<if test = "userName != null">user_name = #{userName} , </if>
			<if test = "password != null"> password = #{password} , </if>
											age = #{age:INTEGER},
									grade = <if test = "grade == 0">null</if>
											<if test = "grade != 0">#{grade}</if>
		</set>
		WHERE user_id = #{userId}
	</update>
	
	<!-- INSERT 매핑구문(insert SQL 등록) :: insert element -->
	<insert 	id="addUser" 	parameterType="user">
		INSERT
		INTO users 	(user_id, user_name, password, age, grade, reg_date)		
		VALUES 		( #{userId}, 
					  #{userName},
					  #{password},
					  #{age:INTEGER},
					  <if test = "grade==0">null</if>
					  <if test = "grade!=0">#{grade}</if> ,
					  #{regDate:DATE} ) 				
  	</insert>
  	
  	<!-- DELETE 매핑구문(delete SQL 등록) :: delete element -->
  	<delete id = "removeUser" parameterType="java.lang.String">
  		DELETE
  		FROM users
  		WHERE user_id = #{value}
  	</delete>
  	
</mapper>