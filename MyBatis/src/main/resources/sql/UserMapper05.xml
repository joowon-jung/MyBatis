<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">	
		
	<!-- UserMapper.xml :: SQL를 갖는 MetaData -->
	<mapper namespace="UserMapper05"> <!-- mapper가 많으니까 구분하기 위함 -->

	<!-- INSERT 매핑구문(insert SQL 등록) : insert element 
			1. Dynamic SQL 사용 처리 :: 추후 학습 -->
  	<insert 	id="addUser" 	parameterType="user">
		INSERT
		INTO users 	(user_id, user_name, password, age, grade, reg_date)		
		VALUES 		( #{userId}, 
					  #{userName},
					  #{password},
					  #{age:INTEGER},
					  <if test = "grade==0">null</if>
					  <if test = "grade!=0">#{grade}</if> ,
					  #{regDate:DATE} ) 				
  	</insert>
  	
  	<!-- SELECT 매핑구문(select SQL 등록) :: select element -->
  	<select 	id="getUser01" 	parameterType="string" resultType="user">
		SELECT
		user_id 		AS userId,
		user_name 		AS userName,
		password 		AS password,
		age 			AS age,
		grade			AS grade,
		reg_date 		AS regDate
		FROM users   	
		WHERE user_id = #{value}			
  	</select>
  	
  	<!-- SELECT 매핑구문에서 사용할 ResultSet과 바인딩될 비지니스 객체 명시적 정의
  		이렇게 쓰면 재사용성이 높아지며, 가독성이 좋아진다!
  		NULL 일 때는 setter method 호출을 하지 않는 것이 default라서 (callSettersOnNulls)
  		ex) int일때는 0, reference type 일땐 null 로 들어가지는 것 ! -->
  	<resultMap id="userSelectMap" type="user">
  		<result property = "userId" column="user_id" jdbcType="VARCHAR"/>
  		<result property = "userName" column="user_name" jdbcType="VARCHAR"/>
  		<result property = "password" column="password" jdbcType="VARCHAR"/>
  		<result property = "age" column="age" jdbcType="INTEGER"/>
  		<result property = "grade" column="grade" jdbcType="NUMERIC"/>
  		<result property = "regDate" column="reg_date" jdbcType="DATE"/>
  	</resultMap>
  	
  	<select 	id="getUser02" 	parameterType="string" resultMap="userSelectMap">
		SELECT
		user_id, user_name, password, age, grade, reg_date
		FROM users   	
		WHERE user_id = #{value}			
  	</select>
  	
  	<select 	id="getUserList" 	resultMap="userSelectMap">
		SELECT
		user_id, user_name, password, age, grade, reg_date
		FROM users   			
  	</select>
  	
  	<delete id = "removeUser" parameterType="java.lang.String">
  		DELETE
  		FROM users
  		WHERE user_id = #{value}
  	</delete>
  	
</mapper>